###################
# Main parameters #
###################
# ALWAYS USE / INSTEAD OF \ IN PATHS!

# Main class simple name
# The name should be what is expected in the current challenge
# (e.g. "Player" or "Solution").
# If name matches "x_y", it will be renamed to "x"
# (e.g. "Main_3" will be renamed to "Main").
#main.class = IsoContest_3
main.class = Codechef_1
#main.class = Main_LARSQR31

# Optional package name
#pack = package com.isograd.exercise;

# Output mode and file.
output.clipboard = true
output.file = true
output.path = C:/Fight/ZTest/output.java

# Main project sources. Add any number of source folders.
# All units from those sources will be added to result file,
# except units containing the '_' sign that are not the main class
#sources.main.1 = C:/GitHub/fight/CodeChef/src
sources.main.1 = C:/GitHub/fight/codechef/src
#sources.main.1 = C:/GitHub/fight/Codeforces/src
#sources.main.1 = C:/GitHub/fight/IsoContest

# Alternate project sources. Add any number of source folders.
# Only imported units will be added to result file.
sources.alt.tools = C:/GitHub/fight/Tools/src

#######################
# Automatic constants #
#######################
# Example: Foo.BAR = "team"
# In class Foo, "static final String BAR = ...;" constant
# will be replaced with: static final String BAR = "team";
# Spacing shall be correct, and line shall end with ';'
# (single line, no trailing comment may contain another ';').
# the 'static' keyword is compulsory, 'final' is not.
# Do not use the '_' suffix in class name if applicable.

# Constants from Scan class
# SYSTEM_IN: use System.in in aggregated code?
Scan.SYSTEM_IN = true
	